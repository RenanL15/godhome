"use client";
import Image from "next/image";
import HollowdleLogo from "@/assets/images/hollowdle-logo.png";
import BossesData from "@/assets/json/bosses_data.json";
import { useEffect, useState } from "react";
import Suggestions from "@/components/suggestions";
import Guesses from "@/components/guesses";

interface BossData {
  name: string;
  portrait: string;
}

export default function Home() {
  const [query, setQuery] = useState("");
  const [suggestionsBox, setSuggestionsBox] = useState(false);
  const [bossesData, setBossesData] = useState<BossData[]>([]);
  const [guessed, setGuessed] = useState(false);

  useEffect(() => {
    const filteredBossesData = BossesData.filter((e) =>
      e.name.toLocaleLowerCase().includes(query.toLocaleLowerCase().trim())
    );

    setBossesData(filteredBossesData);
  }, [query]);
  return (
    <main
      className="flex min-h-screen flex-col items-center py-24"
      onClick={() => setSuggestionsBox(false)}
    >
      <Image
        src={HollowdleLogo}
        alt="Hollowdle logo"
        title="Logo generated by HOLLOW KNIGHT TITLE GENERATOR [https://prashantmohta.github.io/TitleGenerator.HollowKnight]"
        width={350}
        className="mb-12"
      />
      <form
        className="flex gap-2 text-neutral-200 px-6"
        onClick={(e) => e.stopPropagation()}
        onSubmit={(e) => {
          e.preventDefault();
          setGuessed(true);
        }}
      >
        <div className="relative max-w-[40rem]">
          <input
            type="text"
            placeholder="Type a boss name"
            value={query}
            onChange={(e) => {
              setQuery(e.target.value);
              setSuggestionsBox(true);
            }}
            onFocus={() => setSuggestionsBox(true)}
            // autoFocus
            size={200}
            className="w-full p-2 rounded bg-transparent border border-neutral-600"
          />
          {suggestionsBox && (
            <Suggestions
              bossesData={bossesData}
              setQuery={setQuery}
              setSuggestionsBox={setSuggestionsBox}
            />
          )}
        </div>
        <button className="bg-neutral-200 text-black px-4 rounded">
          Guess
        </button>
      </form>
      {guessed && (
        <div className="flex flex-col gap-12">
          <Guesses />
          <Guesses />
          <Guesses />
          <Guesses />
          <Guesses />
          <Guesses />
        </div>
      )}
    </main>
  );
}
